merged_IQ$IQ_children > 104 & merged_IQ$IQ_children <= 107 ~ "Level_5",
merged_IQ$IQ_children > 107 & merged_IQ$IQ_children <= 110 ~ "Level_6",
merged_IQ$IQ_children > 110 & merged_IQ$IQ_children <= 115 ~ "Level_7",
merged_IQ$IQ_children > 115  ~ "Level_8"
)
)
merged_IQ$IQ_children_level <- factor(merged_IQ$IQ_children_level)
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near),
color = "red", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ Distribution in China", fill = "IQ Points") +
# Use geom_linerange to represent the bars based on latitude and longitude
geom_linerange(data = merged_carni_IQ,
aes(x = longitude,
ymin = latitude,
ymax = latitude + delta_IQ_ssp2_near),  # Scale if needed
color = "red", size = 1, na.rm = TRUE) +
theme_bw() +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid = element_blank()) +
#annotation_scale(location = "br", style = "bar") +
#annotation_north_arrow(location = "tl", which_north = "true",
#style = north_arrow_fancy_orienteering) +
coord_sf()
merged_carni_IQ$scaled_IQ <- merged_carni_IQ$delta_IQ_ssp2_near + merged_carni_IQ$latitude
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = scaled_IQ),
color = "red", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
#geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = scaled_IQ),
#color = "red", linewidth = 2) +
geom_rect(data = merged_carni_IQ, aes(xmin = latitude-width/2, xmax = latitude+width/2,
ymin = longitude, ymax = scaled_IQ)) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
width <- 2
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
#geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = scaled_IQ),
#color = "red", linewidth = 2) +
geom_rect(data = merged_carni_IQ, aes(xmin = latitude-width/2, xmax = latitude+width/2,
ymin = longitude, ymax = scaled_IQ)) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
View(merged_carni_IQ)
View(merged_carni_IQ)
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "red", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
map_center <- read.csv("D:/NJU_dissertation/ML_freshwater_wild_fish/Manuscript/Figures/Extended_Data_Fig_IQ_distribution_by_region/China_map_centeroid.csv", header = TRUE)
merged_carni_IQ <- left_join(IQ_cani, map_center, by = "adcode")
merged_carni_IQ <- merged_carni_IQ[,c(1,3,5,6,8,9)]
merged_carni_IQ <- rename(merged_carni_IQ, c("province" = "province.x"))
merged_omni_IQ <- left_join(IQ_omni, map_center, by = "adcode")
merged_omni_IQ <- merged_omni_IQ[,c(1,3,5,6,8,9)]
merged_omni_IQ <- rename(merged_omni_IQ, c("province" = "province.x"))
merged_IQ <- left_join(china_map, IQ_data, by = "adcode")
merged_IQ <- merged_IQ %>%
mutate(
IQ_children_level = case_when(
merged_IQ$IQ_children > 70 & merged_IQ$IQ_children <= 90 ~ 'Level_1',
merged_IQ$IQ_children > 90 & merged_IQ$IQ_children <= 95 ~ "Level_2",
merged_IQ$IQ_children > 95 & merged_IQ$IQ_children <= 100 ~ "Level_3",
merged_IQ$IQ_children > 100 & merged_IQ$IQ_children <= 104 ~ "Level_4",
merged_IQ$IQ_children > 104 & merged_IQ$IQ_children <= 107 ~ "Level_5",
merged_IQ$IQ_children > 107 & merged_IQ$IQ_children <= 110 ~ "Level_6",
merged_IQ$IQ_children > 110 & merged_IQ$IQ_children <= 115 ~ "Level_7",
merged_IQ$IQ_children > 115  ~ "Level_8"
)
)
merged_IQ$IQ_children_level <- factor(merged_IQ$IQ_children_level)
width <- 2
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "red", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
width <- 1
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "red", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Blues", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "red", linewidth = 1) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "red", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "#E38271", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
map_center <- read.csv("D:/NJU_dissertation/ML_freshwater_wild_fish/Manuscript/Figures/Extended_Data_Fig_IQ_distribution_by_region/China_map_centeroid.csv", header = TRUE)
merged_carni_IQ <- left_join(IQ_cani, map_center, by = "adcode")
merged_carni_IQ <- merged_carni_IQ[,c(1,3,5,6,8,9)]
merged_carni_IQ <- rename(merged_carni_IQ, c("province" = "province.x"))
merged_omni_IQ <- left_join(IQ_omni, map_center, by = "adcode")
merged_omni_IQ <- merged_omni_IQ[,c(1,3,5,6,8,9)]
merged_omni_IQ <- rename(merged_omni_IQ, c("province" = "province.x"))
merged_IQ <- left_join(china_map, IQ_data, by = "adcode")
merged_IQ <- merged_IQ %>%
mutate(
IQ_children_level = case_when(
merged_IQ$IQ_children > 70 & merged_IQ$IQ_children <= 90 ~ 'Level_1',
merged_IQ$IQ_children > 90 & merged_IQ$IQ_children <= 95 ~ "Level_2",
merged_IQ$IQ_children > 95 & merged_IQ$IQ_children <= 100 ~ "Level_3",
merged_IQ$IQ_children > 100 & merged_IQ$IQ_children <= 104 ~ "Level_4",
merged_IQ$IQ_children > 104 & merged_IQ$IQ_children <= 107 ~ "Level_5",
merged_IQ$IQ_children > 107 & merged_IQ$IQ_children <= 110 ~ "Level_6",
merged_IQ$IQ_children > 110 & merged_IQ$IQ_children <= 115 ~ "Level_7",
merged_IQ$IQ_children > 115  ~ "Level_8"
)
)
merged_IQ$IQ_children_level <- factor(merged_IQ$IQ_children_level)
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "#E38271", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
map_center <- read.csv("D:/NJU_dissertation/ML_freshwater_wild_fish/Manuscript/Figures/Extended_Data_Fig_IQ_distribution_by_region/China_map_centeroid.csv", header = TRUE)
merged_carni_IQ <- left_join(IQ_cani, map_center, by = "adcode")
merged_carni_IQ <- merged_carni_IQ[,c(1,3,5,6,8,9)]
merged_carni_IQ <- rename(merged_carni_IQ, c("province" = "province.x"))
merged_omni_IQ <- left_join(IQ_omni, map_center, by = "adcode")
merged_omni_IQ <- merged_omni_IQ[,c(1,3,5,6,8,9)]
merged_omni_IQ <- rename(merged_omni_IQ, c("province" = "province.x"))
merged_IQ <- left_join(china_map, IQ_data, by = "adcode")
merged_IQ <- merged_IQ %>%
mutate(
IQ_children_level = case_when(
merged_IQ$IQ_children > 70 & merged_IQ$IQ_children <= 90 ~ 'Level_1',
merged_IQ$IQ_children > 90 & merged_IQ$IQ_children <= 95 ~ "Level_2",
merged_IQ$IQ_children > 95 & merged_IQ$IQ_children <= 100 ~ "Level_3",
merged_IQ$IQ_children > 100 & merged_IQ$IQ_children <= 104 ~ "Level_4",
merged_IQ$IQ_children > 104 & merged_IQ$IQ_children <= 107 ~ "Level_5",
merged_IQ$IQ_children > 107 & merged_IQ$IQ_children <= 110 ~ "Level_6",
merged_IQ$IQ_children > 110 & merged_IQ$IQ_children <= 115 ~ "Level_7",
merged_IQ$IQ_children > 115  ~ "Level_8"
)
)
merged_IQ$IQ_children_level <- factor(merged_IQ$IQ_children_level)
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "#E38271", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
carni_ssp2 <- ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "#E38271", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
carni_ssp5 <- ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4),
color = "#E38271", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
omni_ssp2 <- ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_omni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "#E38271", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
omni_ssp5 <- ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_omni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4),
color = "#E38271", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "none",
panel.grid  = element_blank())
carni_ssp2 <- ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4),
color = "#E38271", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "left",
panel.grid  = element_blank())
carni_ssp2
carni_ssp2 + carni_ssp5 + omni_ssp2 + omni_ssp5
# One map + 4 bars plot=========================================================
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4, colour = ),
color = "#fcab8f", linewidth = 2) +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4, colour = ),
color = "#d92523", linewidth = 2) +
geom_linerange(data = merged_omni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4, colour = ),
color = "#b7d4ea", linewidth = 2) +
geom_linerange(data = merged_omni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4, colour = ),
color = "#2e7ebb", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "left",
panel.grid  = element_blank())
# One map + 4 bars plot=========================================================
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4, colour = ),
color = "#fcab8f", linewidth = 2) +
geom_linerange(data = merged_carni_IQ, aes(x = longitude+0.5, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4, colour = ),
color = "#d92523", linewidth = 2) +
geom_linerange(data = merged_omni_IQ, aes(x = longitude+1, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4, colour = ),
color = "#b7d4ea", linewidth = 2) +
geom_linerange(data = merged_omni_IQ, aes(x = longitude+1.5, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4, colour = ),
color = "#2e7ebb", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "left",
panel.grid  = element_blank())
# One map + 4 bars plot=========================================================
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4, colour = ),
color = "#fcab8f", linewidth = 2) +
geom_linerange(data = merged_carni_IQ, aes(x = longitude+0.5, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4, colour = ),
color = "#d92523", linewidth = 2) +
geom_linerange(data = merged_omni_IQ, aes(x = longitude+1, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4, colour = ),
color = "#fdc38d", linewidth = 2) +
geom_linerange(data = merged_omni_IQ, aes(x = longitude+1.5, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4, colour = ),
color = "#e25508", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "left",
panel.grid  = element_blank())
# One map + 4 bars plot=========================================================
ggplot() +
geom_sf(data = merged_IQ, aes(fill = IQ_children_level)) +
scale_fill_brewer(palette = "Greens", na.value = "grey90") +
labs(title = "Child IQ distribution in China",
fill = "IQ points") +
geom_linerange(data = merged_carni_IQ, aes(x = longitude, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4, colour = ),
color = "#fcab8f", linewidth = 2) +
geom_linerange(data = merged_carni_IQ, aes(x = longitude+0.5, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4, colour = ),
color = "#d92523", linewidth = 2) +
geom_linerange(data = merged_omni_IQ, aes(x = longitude+1, ymin = latitude, ymax = latitude + delta_IQ_ssp2_near*1e4, colour = ),
color = "#b7d4ea", linewidth = 2) +
geom_linerange(data = merged_omni_IQ, aes(x = longitude+1.5, ymin = latitude, ymax = latitude + delta_IQ_ssp5_near*1e4, colour = ),
color = "#2e7ebb", linewidth = 2) +
theme(panel.background = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
legend.position = "left",
panel.grid  = element_blank())
load("D:/NJU_dissertation/ML_freshwater_wild_fish/Manuscript/Submission/Submission/PNAS/Data_code_availability/Machine_learning/ML_PDP_SHAP.RData")
library(shapr)       # v0.2.2
library(kernelshap)  # v0.4.1
library(shapviz)
rf_shap
#library(shapr)          # v0.2.2
library(DALEX)          # v2.4.3
library(DALEXtra)       # v2.3.0
rf_feature
# PDP plot======================================================================
## Random Forest
model_profile_rf <- model_profile(explainer_rf, type = 'partial',
variables = c('Trophic_level','log_weight',
'Two_m_temperature_yearmax_runmean_K',
'Surface_net_downward_shortwave_flux',
'Potential_evaporation_m',
'Collection_year', 'log_hg_em_lag2',
'Precipitation_yearsum_mm',
'Ten_metre_wind_speed', 'log_ch4_em'
))
#Model explanation==============================================================
set.seed(123)
explainer_rf <- DALEX::explain(rf_final_fit,
data = rd_test[, -5],
y = rd_test$log_mean_mehg,
label = "Random Forest")
explainer_cubist <- DALEX::explain(cubist_final_fit,
data = rd_test[, -5],
y = rd_test$log_mean_mehg,
label = "Cubist")
explainer_svmrbf <- DALEX::explain(svmrbf_final_fit,
data = rd_test_transformed[, -11],
y = rd_test_transformed$log_mean_mehg,
label = "SVM_RBF")
explainer_glm <- DALEX::explain(glm_final_fit,
data = rd_test_transformed[, -11],
y = rd_test_transformed$log_mean_mehg,
label = "Glmnet")
rf_feature <- explainer_rf %>% model_parts() %>% plot(show_boxplots = F) +
ggtitle("Feature Importance ", "")
library(dplyr)          # v1.0.7
library(ggplot2)     # v3.5.0
library(tidymodels)  # v1.1.1
library(patchwork)
setwd("D:/NJU_dissertation/ML_freshwater_wild_fish/Manuscript/Submission/Submission/PNAS/Data_code_availability/Fig.S10")
wet_weight_data <- read.csv("Wet_weight.csv", header = TRUE)
dry_weight_data <- read.csv("Dry_weight.csv", header = TRUE)
# Linear fit====================================================================
wet_weight_fit <- lm(mehg_log10 ~ thg_log10, data = wet_weight_data)
summary_wet_weight_fit <- summary(wet_weight_fit)
wet_weight_rsq <- summary_wet_weight_fit$adj.r.squared
dry_weight_fit <- lm(mehg_log10 ~ thg_log10, data = dry_weight_data)
summary_dry_weight_fit <- summary(dry_weight_fit)
dry_weight_rsq <- summary_dry_weight_fit$adj.r.squared
wet_weight_plot <- ggplot(wet_weight_data, aes(x = thg_log10, y = mehg_log10)) +
geom_point(shape = 21, size = 4, stroke = 0.5, color = 'black', fill = "#7fccba") +
facet_grid(. ~ group) +
geom_smooth(method = "lm", se = F, color = "#e76a42", linewidth = 1, linetype = "dashed") +
coord_obs_pred() +
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14, color = "black"),
legend.position = 'right') +
labs(x = 'Log10-scaled THg concentration', y = 'Log10-scaled MeHg concentraion')
wet_weight_plot
dry_weight_plot <- ggplot(dry_weight_data, aes(x = thg_log10, y = mehg_log10)) +
geom_point(shape = 21, size = 4, stroke = 0.5, color = 'black', fill = "#7fccba") +
facet_grid(. ~ group) +
geom_smooth(method = "lm", se = F, color = "#e76a42", linewidth = 1, linetype = "dashed") +
coord_obs_pred() +
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14, color = "black"),
legend.position = 'right') +
labs(x = 'Log10-scaled THg concentration', y = '') #+
dry_weight_plot
wet_weight_plot + dry_weight_plot
setwd("D:/NJU_dissertation/ML_freshwater_wild_fish/Manuscript/Submission/Submission/PNAS/Data_code_availability/Fig.S11")
weight_length_data <- read.csv("Weight_length.csv", header = TRUE)
# Check data normality==========================================================
shapiro.test(weight_length_data$log_weight)
shapiro.test(weight_length_data$log_length)
qqnorm(weight_length_data$log_weight)
qqline(weight_length_data$log_weight)
weight_length_fit <- lm(log_weight ~ log_length, data = weight_length_data)
summary_weight_length_fit <- summary(weight_length_fit)
weight_length_rsq <- summary_weight_length_fit$adj.r.squared
summary_weight_length_fit
weight_length_plot <- ggplot(weight_length_data, aes(x = log_length, y = log_weight)) +
geom_point(shape = 21, size = 4, stroke = 0.5, color = 'black', fill = "#7fccba") +
facet_grid(. ~ group) +
geom_smooth(method = "lm", se = F, color = "#e76a42", linewidth = 1, linetype = "dashed") +
#coord_obs_pred() +
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14, color = "black"),
legend.position = 'right') +
labs(x = 'Log10-scaled length', y = 'Log10-scaled weight')
weight_length_plot
